spring:
  config:
    import: optional:file:.env[.properties]
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # jdbc-url: ${DB_URL}/business
    url: ${DB_URL}/business
    username: ${DB_USER}
    password: ${DB_PASSWORD}

#다중 DB 연결 예정
#  second-datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    jdbc-url: ${DB_URL}/log
#    username: ${DB_USER}
#    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update # "create"을 사용하면 애플리케이션 시작 시에 테이블을 새로 생성합니다. 주의해서 사용해야 합니다.
    properties:
      show-sql: true # Hibernate가 생성하는 SQL을 콘솔에 출력합니다. 개발 환경에서 유용합니다.
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
server:
  port: 8081

cloud:
  aws:
    credentials:
      access-key: ${S3_ACCESS_KEY}
      secret-key: ${S3_SECRET_KEY}
    s3:
      bucket: watson-house
    region:
      static: ap-northeast-2
      auto: false
    stack:
      auto: false
logging:
  level:
    com.watson.business: debug